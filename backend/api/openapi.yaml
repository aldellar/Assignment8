#
# CSE186 Assignment 8 Backend
#

openapi: '3.0.3'

info:
  description: CSE186 Assignment 8 Backend
  version: 0.2.0
  title: CSE186 Assignment 8 Backend

servers:
  - url: http://localhost:3010/api/v0

paths:
  /login:
    post:
      description: Login
      requestBody:
        description: Request Body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credentials'
      responses:
        200:
          description: Books Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedError'
  /workspaces:
    get:
      security:
      - bearerAuth: []     
      description: Returns all workspaces
      responses:
        401:
          description: Unauthorised
        200:
          description: Returns a list of workspaces the user has access to
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/workspace'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedError'
                  
components:
  schemas:
    UnexpectedError:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

    Credentials:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password

    User:
      type: object
      properties:
        name:
          type: string
        accessToken:
          type: string
        id:
          type: string
          format: uuid
      required:
        - name
        - accessToken
        - id

    workspace:
      type: object
      properties:
        name:
          type: string
      required:
        - name
     
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes